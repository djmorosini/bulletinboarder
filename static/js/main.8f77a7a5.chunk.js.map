{"version":3,"sources":["Components/Item.js","Components/InnerList.js","Components/Board.js","Components/App.js","serviceWorker.js","index.js"],"names":["Item","this","props","itemId","listId","selector","callback","document","querySelector","addEventListener","e","key","callbackValue","value","listenForEnterKey","concat","addToList","elemId","caretPos","elem","createTextRange","range","move","select","focus","undefined","selectionStart","setSelectionRange","setCaretPosition","react_default","a","createElement","id","className","placeholder","content","Component","InnerList","_this","list","listName","onClick","confirmDeletePopup","autoComplete","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","height","border","overflow","items","map","item","index","react","isDragDisabled","draggableId","Object","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","margin","display","Item_Item","reorder","startIndex","endIndex","result","_result$splice","Array","from","splice","removed","slicedToArray","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","Board","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteList","state","lists","filter","setState","saveBoard","boardInfo","boardId","createNewList","droppableNumber","listArray","newList","push","newListArray","tempArray","forEach","getElementById","deleteItem","find","updatedList","pop","itemIndex","getList","onDragEnd","type","destinationArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","destResults","err","return","sourceArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","srcResults","confirmPopup","textContent","dragElement","length","sortedlists","slice","sort","b","nameA","toUpperCase","nameB","lastListId","parseInt","listItems","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","lastItemId","_this2","InnerList_InnerList","popupSwitch","switchItemPopup","boardName","direction","flexWrap","alignSelf","droppableProps","closeBoard","elementId","pos1","pos2","pos3","pos4","closeDragElement","onmouseup","onmousemove","elementDrag","window","event","preventDefault","clientX","clientY","top","offsetTop","left","offsetLeft","dragMouseDown","onmousedown","App","createBoard","name","switchBoardPopup","boards","newBoard","boardNumber","currentBoard","board","newBoards","JSON","parse","localStorage","getItem","savedBoards","setItem","stringify","loadBoard","deleteBoard","confirmBoardDeletePopup","boardPopup","boardNameInput","lastBoardId","Board_Board","Boolean","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f77a7a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.querySelector(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback, listId) => {\r\n  document.querySelector(selector).addEventListener('keypress', function enterFunction(e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default class Item extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.itemId === 'addItem') {\r\n      let listId = this.props.listId\r\n      listenForEnterKey(`#${listId}-input`, this.props.addToList, listId)\r\n      setCaretPosition(`#${listId}-input`, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.itemId === 'addItem') {\r\n      let listId = this.props.listId\r\n      return (\r\n        <input id={`${listId}-input`} className='item-content-input' placeholder='Enter item content' />\r\n      )\r\n    } else {\r\n      let itemId = this.props.itemId\r\n      return (\r\n        <div id={`${itemId}`}>\r\n          {this.props.content}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Item from './Item'\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '16px',\r\n  margin: `0 0 4px 0`,\r\n  border: '1px solid black',\r\n  width: '200px',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  padding: '8px',\r\n  width: '250px',\r\n  height: '370px',\r\n  border: '1px solid black',\r\n  overflow: 'auto'\r\n});\r\n\r\nexport default class InnerList extends Component {\r\n\r\n  render() {\r\n    let list = this.props.list\r\n    let listId = list.id\r\n    let listName = list.listName\r\n\r\n    return (\r\n      <div key={listId}>\r\n        <i onClick={() => this.props.confirmDeletePopup('block', listId)} className=\"far fa-times-circle\"></i>\r\n        {listId === 'addList' ? <input autoComplete=\"off\" id='list-name-input' placeholder='Enter list name' /> : <h1 className='list-title-style'>{listName}</h1>}\r\n        <Droppable droppableId={listId}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='my-lists'\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}>\r\n              {list.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {item ?\r\n                    <Draggable\r\n                      isDragDisabled={item.id === \"addItem\" ? true : false}\r\n                      key={item.id === 'addItem' ? item.id + '-' + listId : item.id}\r\n                      draggableId={item.id === 'addItem' ? item.id + '-' + listId : item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className='item-style'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <i onClick={() => this.props.confirmDeletePopup('block', listId, item.id)} className=\"far fa-times-circle\"></i>\r\n                          <div style={{ display: 'none' }} id={`list-id-${listId}`}>{listId}</div>\r\n                          <Item addToList={this.props.addToList} listId={listId} itemId={item.id} content={item.content} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable> : <div className='no-items'></div>}\r\n                </Fragment>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList'\r\n\r\nconst listenForEnterKey = (selector, callback, listId) => {\r\n  document.querySelector(selector).addEventListener('keypress', function enterFunction(e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  let result\r\n  if (list.items) {\r\n    result = Array.from(list.items)\r\n  } else {\r\n    result = Array.from(list);\r\n  }\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source.items);\r\n  const destClone = Array.from(destination.items);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '10px 10px 0 15px',\r\n  margin: `0 8px 0 0`,\r\n  height: '95%',\r\n  width: '280px',\r\n  border: '1px solid black',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  display: 'flex',\r\n  padding: '20px 8px 8px 8px',\r\n  flexWrap: 'no-wrap',\r\n  overflow: 'auto',\r\n  width: '98vw',\r\n  height: '90vh',\r\n  border: '1px solid black',\r\n  alignSelf: 'center'\r\n});\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemIndex = 0\r\n    this.droppableNumber = 0\r\n    this.state = {\r\n      lists: [{ listName: 'Add list', id: 'addList', items: [] }]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dragElement('confirm-item-delete-popup')\r\n    this.props.dragElement('confirm-list-delete-popup')\r\n    if (this.props.boardInfo.lists && this.props.boardInfo.lists.length !== 0) {\r\n      let lists = this.props.boardInfo.lists\r\n      this.setState({ lists: lists })\r\n      if (lists.length > 1) {\r\n        let sortedlists = lists.slice().sort((a, b) => {\r\n          var nameA = a.id.toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b.id.toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n\r\n          // names must be equal\r\n          return 0;\r\n        });\r\n        let lastListId = sortedlists[sortedlists.length - 1].id.slice(9)\r\n        this.droppableNumber = parseInt(lastListId) + 1\r\n\r\n        let listItems = []\r\n        for (let list of lists) {\r\n          for (let item of list.items) {\r\n            listItems.push(item)\r\n          }\r\n        }\r\n        let items = listItems.sort((a, b) => {\r\n          var nameA = a.id.toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b.id.toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n\r\n          // names must be equal\r\n          return 0;\r\n        });\r\n        let lastItemId = items[items.length - 1].id.slice(5)\r\n        this.itemIndex = parseInt(lastItemId) + 1\r\n      }\r\n    }\r\n    this.props.setCaretPosition('#list-name-input', 0)\r\n    listenForEnterKey(\"#list-name-input\", this.createNewList);\r\n  }\r\n\r\n  deleteList = (id) => {\r\n    this.confirmDeletePopup('none')\r\n    let lists = this.state.lists\r\n    const result = lists.filter(list => list.id !== id)\r\n    this.setState({ lists: result })\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, result)\r\n  }\r\n\r\n  createNewList = (listName) => {\r\n    let listId = 'droppable' + this.droppableNumber\r\n    let items = [{ id: `addItem`, content: 'Add item' }]\r\n    let listArray = this.state.lists\r\n    let newList = { listName: listName, id: listId, items: items }\r\n    listArray.push(newList)\r\n    let newListArray = []\r\n    let tempArray = []\r\n    listArray.forEach((list, index) => {\r\n      if (list.id === 'addList') {\r\n        tempArray.push(list)\r\n      } else {\r\n        newListArray.push(list)\r\n      }\r\n    })\r\n    newListArray.push(tempArray[0])\r\n\r\n    this.setState({ lists: newListArray })\r\n\r\n    document.getElementById('list-name-input').value = ''\r\n    this.droppableNumber++\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, newListArray)\r\n  }\r\n\r\n  deleteItem = (listId, itemId) => {\r\n    this.confirmDeletePopup('none', 'list', 'item')\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId)\r\n    let updatedList = result.items.filter(item => item.id !== itemId)\r\n    result.items = updatedList\r\n    this.setState({ lists: lists.map(list => list.id === listId ? result : list) })\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists.map(list => list.id === listId ? result : list))\r\n  }\r\n\r\n  addToList = (listId, content) => {\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId);\r\n    let tempArray = []\r\n    let items = result.items\r\n    tempArray.push(items.pop())\r\n    items.push({ id: `item-${this.itemIndex}`, content: content })\r\n    items.push(tempArray[0])\r\n\r\n    this.itemIndex++\r\n    this.setState({ lists: lists.map(list => list.id === listId ? list = { ...list, items: items } : list) })\r\n\r\n    this.props.setCaretPosition(`#${listId}-input`, 0)\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists.map(list => list.id === listId ? list = { ...list, items: items } : list))\r\n  }\r\n\r\n  getList = (id) => {\r\n    let lists = this.state.lists\r\n    let result = lists.find(list => list.id === id);\r\n    return result\r\n  };\r\n\r\n  onDragEnd = (result) => {\r\n    if (result.type === 'COLUMN') {\r\n      // dropped outside the list\r\n      if (!result.destination) {\r\n        return;\r\n      }\r\n\r\n      const lists = reorder(\r\n        this.state.lists,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      this.setState({\r\n        lists: lists\r\n      });\r\n      this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists)\r\n    } else {\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        const items = reorder(\r\n          this.getList(source.droppableId),\r\n          source.index,\r\n          destination.index\r\n        );\r\n\r\n        this.setState({ lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list) })\r\n        this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list))\r\n      } else {\r\n        const result = move(\r\n          this.getList(source.droppableId),\r\n          this.getList(destination.droppableId),\r\n          source,\r\n          destination\r\n        );\r\n\r\n        let destinationArray = []\r\n        for (let destResults of result[destination.droppableId]) {\r\n          destinationArray.push(destResults)\r\n        }\r\n\r\n        let sourceArray = []\r\n        for (let srcResults of result[source.droppableId]) {\r\n          sourceArray.push(srcResults)\r\n        }\r\n\r\n        this.setState({\r\n          lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n            list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list)\r\n        })\r\n        this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n          list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list))\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmDeletePopup = (display, listId, itemId) => {\r\n    if (itemId) {\r\n      let confirmPopup = document.getElementById('confirm-item-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let item = document.getElementById('item-id')\r\n        item.textContent = itemId\r\n        let itemList = document.getElementById('item-list-id')\r\n        itemList.textContent = listId\r\n      }\r\n    } else {\r\n      let confirmPopup = document.getElementById('confirm-list-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let list = document.getElementById('list-id-' + listId)\r\n        list.textContent = listId\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const lists = this.state.lists.map((list, index) => (\r\n      <div className='list-wrap' key={list.id}>\r\n        <Draggable draggableId={list.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='list-style'\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              style={getItemStyle(\r\n                snapshot.isDragging,\r\n                provided.draggableProps.style\r\n              )}\r\n            >\r\n              <InnerList addToList={this.addToList} confirmDeletePopup={this.confirmDeletePopup} popupSwitch={this.switchItemPopup} list={list} />\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    ))\r\n\r\n    return (\r\n      <div id='board-wrap'>\r\n        <div id='board-title'>{this.props.boardInfo.boardName}</div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"horizontal\" type='COLUMN'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                id='board'\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                <i onClick={() => this.props.closeBoard(`${this.props.boardInfo.boardId}`, this.state.lists)} className=\"far fa-times-circle left\"></i>\r\n                {lists}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div id='confirm-item-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none', 'list', 'item')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <div style={{ display: 'none' }} id='item-id'></div>\r\n          <div style={{ display: 'none' }} id='item-list-id'></div>\r\n          <p>Delete item?</p>\r\n          <button onClick={() => this.deleteItem(`${document.getElementById('item-list-id').textContent}`, `${document.getElementById('item-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none', 'list', 'item')}>No</button>\r\n        </div>\r\n        <div id='confirm-list-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <p>Delete list?</p>\r\n          <button onClick={() => this.deleteList(`${document.getElementById('list-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none')}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Board from './Board'\r\n\r\nconst dragElement = (elementId) => {\r\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n\r\n  const closeDragElement = () => {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n\r\n  const elementDrag = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    document.getElementById(elementId).style.top = (document.getElementById(elementId).offsetTop - pos2) + \"px\";\r\n    document.getElementById(elementId).style.left = (document.getElementById(elementId).offsetLeft - pos1) + \"px\";\r\n  }\r\n\r\n  const dragMouseDown = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a const whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  if (document.getElementById(elementId)) {\r\n    // if present, the header is where you move the DIV from:\r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV: \r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  }\r\n}\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.querySelector(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      callback(callbackValue);\r\n    }\r\n  });\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boardNumber = 0\r\n    this.state = {\r\n      boards: [],\r\n      currentBoard: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    dragElement('board-pop-up')\r\n    dragElement('confirm-board-delete-popup')\r\n    if (this.state.boards.length === 0 && JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let boards = JSON.parse(localStorage.getItem('boards'))\r\n      let lastBoardId = boards[boards.length - 1].boardId.slice(6)\r\n      this.boardNumber = parseInt(lastBoardId) + 1\r\n      this.setState({ boards: boards })\r\n    }\r\n  }\r\n\r\n  createBoard = (name) => {\r\n    this.switchBoardPopup('none')\r\n    let boards = this.state.boards\r\n    let newBoard = { boardId: `board-${this.boardNumber}`, boardName: name, lists: null }\r\n    boards.push(newBoard)\r\n    this.setState({ boards: boards, currentBoard: newBoard })\r\n    this.boardNumber++\r\n    this.saveBoard(newBoard.boardId, newBoard.lists)\r\n  }\r\n\r\n  saveBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n\r\n    let newBoards = []\r\n    if (JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let savedBoards = JSON.parse(localStorage.getItem('boards'))\r\n      savedBoards.forEach(board => {\r\n        if (board.boardId === id) {\r\n          board = result\r\n        }\r\n        newBoards.push(board)\r\n      })\r\n      if (savedBoards.filter(board => board.boardId === id).length === 0) {\r\n        newBoards.push(result)\r\n      }\r\n    } else {\r\n      newBoards = this.state.boards.map((board) => board.boardId === id ? result : board)\r\n    }\r\n\r\n    this.setState({ boards: newBoards })\r\n    localStorage.setItem('boards', JSON.stringify(newBoards))\r\n  }\r\n\r\n  loadBoard = (id) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    this.setState({ currentBoard: result })\r\n  }\r\n\r\n  closeBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n    this.setState({ boards: this.state.boards.map((board) => board.boardId === id ? result : board) })\r\n    this.saveBoard(id, lists)\r\n    this.setState({ currentBoard: null })\r\n  }\r\n\r\n  deleteBoard = (id) => {\r\n    this.confirmBoardDeletePopup('none')\r\n    let boards = this.state.boards\r\n    const result = boards.filter(board => board.boardId !== id)\r\n    this.setState({ boards: result })\r\n    localStorage.setItem('boards', JSON.stringify(result))\r\n  }\r\n\r\n  switchBoardPopup = (display) => {\r\n    let boardPopup = document.getElementById('board-pop-up')\r\n    let boardNameInput = document.getElementById('board-name-input')\r\n    if (display === 'none') {\r\n      boardPopup.style = 'display: none;'\r\n      boardNameInput.value = ''\r\n    } else {\r\n      this.confirmBoardDeletePopup('none')\r\n      listenForEnterKey(\"#board-name-input\", this.createBoard);\r\n      boardPopup.style = 'display: block;'\r\n      setCaretPosition('#board-name-input', 0)\r\n    }\r\n  }\r\n\r\n  confirmBoardDeletePopup = (display, id) => {\r\n    let confirmPopup = document.getElementById('confirm-board-delete-popup')\r\n    if (display === 'none') {\r\n      confirmPopup.style = 'display: none;'\r\n    } else {\r\n      this.switchBoardPopup('none')\r\n      confirmPopup.style = 'display: block;'\r\n      let boardId = document.getElementById('board-id')\r\n      boardId.textContent = id\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.currentBoard) {\r\n      let board = this.state.currentBoard\r\n      return (\r\n        <Board dragElement={dragElement} closeBoard={this.closeBoard} saveBoard={this.saveBoard} boardInfo={board} setCaretPosition={setCaretPosition} />\r\n      )\r\n    } else {\r\n      let boards = this.state.boards.map((board) => {\r\n        return (\r\n          <div className='board-names-wrap' key={board.boardId}>\r\n            <div className='board-names' onClick={() => this.loadBoard(`${board.boardId}`)}>\r\n              {board.boardName}\r\n            </div>\r\n            <i onClick={() => this.confirmBoardDeletePopup('block', board.boardId)} className=\"far fa-times-circle\"></i>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <div id='app'>\r\n          <h1>List-Maker</h1>\r\n          <div>\r\n            <h3>Boards</h3>\r\n            <div id='board-dropdown'>\r\n              {boards.length > 0 ? boards.map(board => board) : 'No boards'}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.switchBoardPopup(`block`)}>Create board</button>\r\n          </div>\r\n          <div id='board-pop-up' className='pop-ups'>\r\n            <i onClick={() => this.switchBoardPopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <input id='board-name-input' placeholder='Enter board name' />\r\n            <button onClick={() => this.createBoard(`${document.getElementById('board-name-input').value}`)}>Create board</button>\r\n          </div>\r\n          <div id='confirm-board-delete-popup' className='pop-ups'>\r\n            <i onClick={() => this.confirmBoardDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <div style={{ display: 'none' }} id='board-id'></div>\r\n            <p>Delete board?</p>\r\n            <button onClick={() => this.deleteBoard(`${document.getElementById('board-id').textContent}`)} id='yes-button'>Yes</button>\r\n            <button onClick={() => this.confirmBoardDeletePopup('none')}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}