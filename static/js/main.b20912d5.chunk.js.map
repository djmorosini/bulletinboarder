{"version":3,"sources":["Components/InnerList.js","Components/Board.js","Components/App.js","serviceWorker.js","index.js"],"names":["InnerList","_this","this","list","props","listId","id","listName","react_default","a","createElement","key","onClick","confirmDeletePopup","className","autoComplete","placeholder","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","height","border","overflow","items","map","item","index","react","draggableId","Object","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","margin","display","content","Component","listenForEnterKey","selector","callback","document","querySelector","addEventListener","e","callbackValue","value","textContent","reorder","startIndex","endIndex","result","_result$splice","Array","from","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","Board","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteList","state","lists","filter","setState","createNewList","droppableNumber","listArray","newList","push","newListArray","tempArray","forEach","getElementById","setCaretPosition","addToList","deleteItem","itemId","find","updatedList","pop","concat","itemIndex","getList","onDragEnd","type","destinationArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","destResults","err","return","sourceArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","srcResults","confirmPopup","dragElement","length","boardInfo","_this2","InnerList_InnerList","popupSwitch","switchItemPopup","closeBoard","boardId","saveBoard","boardName","direction","flexWrap","alignSelf","droppableProps","elementId","pos1","pos2","pos3","pos4","closeDragElement","onmouseup","onmousemove","elementDrag","window","event","preventDefault","clientX","clientY","top","offsetTop","left","offsetLeft","dragMouseDown","onmousedown","elemId","caretPos","elem","createTextRange","range","select","focus","selectionStart","setSelectionRange","App","createBoard","name","switchBoardPopup","boards","newBoard","boardNumber","currentBoard","board","newBoards","JSON","parse","localStorage","getItem","savedBoards","setItem","stringify","loadBoard","deleteBoard","confirmBoardDeletePopup","boardPopup","boardNameInput","lastBoardId","slice","parseInt","Board_Board","Boolean","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b20912d5.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '16px',\r\n  margin: `0 0 4px 0`,\r\n  border: '1px solid black',\r\n  width: '200px',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  padding: '8px',\r\n  width: '250px',\r\n  height: '370px',\r\n  border: '1px solid black',\r\n  overflow: 'auto'\r\n});\r\n\r\nexport default class InnerList extends Component {\r\n\r\n  render() {\r\n    let list = this.props.list\r\n    let listId = list.id\r\n    let listName = list.listName\r\n\r\n    return (\r\n      <div key={listId}>\r\n        <i onClick={() => this.props.confirmDeletePopup('block', listId)} className=\"far fa-times-circle\"></i>\r\n        {listId === 'addList' ? <input autoComplete=\"off\" id='list-name-input' placeholder='Enter list name' /> : <h1 className='list-title-style'>{listName}</h1> }\r\n        <Droppable droppableId={listId}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='my-lists'\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}>\r\n              {list.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {item ?\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className='item-style'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <i onClick={() => this.props.confirmDeletePopup('block', listId, item.id)} className=\"far fa-times-circle\"></i>\r\n                          <div style={{ display: 'none' }} id='list-id'>{listId}</div>\r\n                          {item.id === 'addItem' ? <input id='item-content-input' placeholder='Enter item content' /> : item.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable> : <div className='no-items'></div>}\r\n                </Fragment>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList'\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        let listId = document.querySelector('#list-id').textContent\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  let result\r\n  if (list.items) {\r\n    result = Array.from(list.items)\r\n  } else {\r\n    result = Array.from(list);\r\n  }\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source.items);\r\n  const destClone = Array.from(destination.items);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '10px 10px 0 15px',\r\n  margin: `0 8px 0 0`,\r\n  height: '95%',\r\n  width: '280px',\r\n  border: '1px solid black',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  display: 'flex',\r\n  padding: '20px 8px 8px 8px',\r\n  flexWrap: 'no-wrap',\r\n  overflow: 'auto',\r\n  width: '98vw',\r\n  height: '90vh',\r\n  border: '1px solid black',\r\n  alignSelf: 'center'\r\n});\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemIndex = 0\r\n    this.droppableNumber = 0\r\n    this.state = {\r\n    lists: [{ listName: 'Add list', id: 'addList', items: [] }]\r\n  };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dragElement('confirm-item-delete-popup')\r\n    this.props.dragElement('confirm-list-delete-popup')\r\n    if (this.state.lists.length === 1 && this.props.boardInfo.lists && this.props.boardInfo.lists.length !== 0) {\r\n      let lists = this.props.boardInfo.lists\r\n      this.setState({ lists: lists })\r\n    }\r\n    this.props.setCaretPosition('list-name-input', 0)\r\n    listenForEnterKey(\"#list-name-input\", this.createNewList);\r\n  }\r\n\r\n  deleteList = (id) => {\r\n    this.confirmDeletePopup('none')\r\n    let lists = this.state.lists\r\n    const result = lists.filter(list => list.id !== id)\r\n    this.setState({ lists: result })\r\n  }\r\n\r\n  createNewList = (listName) => {\r\n    let listId = 'droppable' + this.droppableNumber\r\n    let items = [{ id: `addItem`, content: 'Add item' }]\r\n    let listArray = this.state.lists\r\n    let newList = { listName: listName, id: listId, items: items }\r\n    listArray.push(newList)\r\n    let newListArray = []\r\n    let tempArray = []\r\n    listArray.forEach((list, index) => {\r\n      if (list.id === 'addList') {\r\n        tempArray.push(list)\r\n      } else {\r\n        newListArray.push(list)\r\n      }\r\n    })\r\n    newListArray.push(tempArray[0])\r\n\r\n    this.setState({ lists: newListArray })\r\n\r\n    document.getElementById('list-name-input').value = ''\r\n    this.props.setCaretPosition('item-content-input', 0)\r\n    listenForEnterKey(\"#item-content-input\", this.addToList);\r\n    this.droppableNumber++\r\n  }\r\n\r\n  deleteItem = (listId, itemId) => {\r\n    this.confirmDeletePopup('none', 'list', 'item')\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId)\r\n    let updatedList = result.items.filter(item => item.id !== itemId)\r\n    result.items = updatedList\r\n    this.setState({ lists: lists.map(list => list.id === listId ? result : list) })\r\n  }\r\n\r\n  addToList = (listId, content) => {\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId);\r\n    let tempArray = []\r\n    let items = result.items\r\n    tempArray.push(items.pop())\r\n    items.push({ id: `item-${this.itemIndex}`, content: content })\r\n    items.push(tempArray[0])\r\n\r\n    this.itemIndex++\r\n    this.setState({ lists: lists.map(list => list.id === listId ? list = { ...list, items: items } : list) })\r\n\r\n    let itemPopupInput = document.getElementById('item-content-input')\r\n    itemPopupInput.value = ''\r\n    listenForEnterKey(\"#item-content-input\", this.addToList);\r\n    this.props.setCaretPosition('item-content-input', 0)\r\n  }\r\n\r\n  getList = (id) => {\r\n    let lists = this.state.lists\r\n    let result = lists.find(list => list.id === id);\r\n    return result\r\n  };\r\n\r\n  onDragEnd = (result) => {\r\n    if (result.type === 'COLUMN') {\r\n      // dropped outside the list\r\n      if (!result.destination) {\r\n        return;\r\n      }\r\n\r\n      const lists = reorder(\r\n        this.state.lists,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      this.setState({\r\n        lists: lists\r\n      });\r\n    } else {\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        const items = reorder(\r\n          this.getList(source.droppableId),\r\n          source.index,\r\n          destination.index\r\n        );\r\n\r\n        this.setState({ lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list) })\r\n\r\n      } else {\r\n        const result = move(\r\n          this.getList(source.droppableId),\r\n          this.getList(destination.droppableId),\r\n          source,\r\n          destination\r\n        );\r\n\r\n        let destinationArray = []\r\n        for (let destResults of result[destination.droppableId]) {\r\n          destinationArray.push(destResults)\r\n        }\r\n\r\n        let sourceArray = []\r\n        for (let srcResults of result[source.droppableId]) {\r\n          sourceArray.push(srcResults)\r\n        }\r\n\r\n        this.setState({\r\n          lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n            list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmDeletePopup = (display, listId, itemId) => {\r\n    if (itemId) {\r\n      let confirmPopup = document.getElementById('confirm-item-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let item = document.getElementById('item-id')\r\n        item.textContent = itemId\r\n        let itemList = document.getElementById('item-list-id')\r\n        itemList.textContent = listId\r\n      }\r\n    } else {\r\n      let confirmPopup = document.getElementById('confirm-list-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let list = document.getElementById('list-id')\r\n        list.textContent = listId\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const lists = this.state.lists.map((list, index) => (\r\n      <div className='list-wrap' key={list.id}>\r\n        <Draggable draggableId={list.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='list-style'\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              style={getItemStyle(\r\n                snapshot.isDragging,\r\n                provided.draggableProps.style\r\n              )}\r\n            >\r\n              <InnerList confirmDeletePopup={this.confirmDeletePopup} popupSwitch={this.switchItemPopup} list={list} />\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    ))\r\n\r\n    return (\r\n      <div id='board-wrap'>\r\n        <button onClick={() => this.props.closeBoard(`${this.props.boardInfo.boardId}`, this.state.lists)} >Close board</button>\r\n        <button onClick={() => this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists)} >Save board</button>\r\n        <div id='board-title'>{this.props.boardInfo.boardName}</div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"horizontal\" type='COLUMN'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                id='board'\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                {lists}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div id='confirm-item-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none', 'list', 'item')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <div style={{ display: 'none' }} id='item-id'></div>\r\n          <div style={{ display: 'none' }} id='item-list-id'></div>\r\n          <p>Delete item?</p>\r\n          <button onClick={() => this.deleteItem(`${document.getElementById('item-list-id').textContent}`, `${document.getElementById('item-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none', 'list', 'item')}>No</button>\r\n        </div>\r\n        <div id='confirm-list-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <p>Delete list?</p>\r\n          <button onClick={() => this.deleteList(`${document.getElementById('list-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none')}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Board from './Board'\r\n\r\nconst dragElement = (elementId) => {\r\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n\r\n  const closeDragElement = () => {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n\r\n  const elementDrag = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    document.getElementById(elementId).style.top = (document.getElementById(elementId).offsetTop - pos2) + \"px\";\r\n    document.getElementById(elementId).style.left = (document.getElementById(elementId).offsetLeft - pos1) + \"px\";\r\n  }\r\n\r\n  const dragMouseDown = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a const whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  if (document.getElementById(elementId)) {\r\n    // if present, the header is where you move the DIV from:\r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV: \r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  }\r\n}\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.getElementById(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      callback(callbackValue);\r\n    }\r\n  });\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boardNumber = 0\r\n    this.state = {\r\n      boards: [],\r\n      currentBoard: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    dragElement('board-pop-up')\r\n    dragElement('confirm-board-delete-popup')\r\n    if (this.state.boards.length === 0 && JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let boards = JSON.parse(localStorage.getItem('boards'))\r\n      let lastBoardId = boards[boards.length - 1].boardId.slice(6)\r\n      this.boardNumber = parseInt(lastBoardId) + 1\r\n      this.setState({ boards: boards })\r\n    }\r\n  }\r\n\r\n  createBoard = (name) => {\r\n    this.switchBoardPopup('none')\r\n    let boards = this.state.boards\r\n    let newBoard = { boardId: `board-${this.boardNumber}`, boardName: name, lists: null }\r\n    boards.push(newBoard)\r\n    this.setState({ boards: boards, currentBoard: newBoard })\r\n    this.boardNumber++\r\n  }\r\n\r\n  saveBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n\r\n    let newBoards = []\r\n    if (JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let savedBoards = JSON.parse(localStorage.getItem('boards'))\r\n      savedBoards.forEach(board => {\r\n        if (board.boardId === id) {\r\n          board = result\r\n        }\r\n        newBoards.push(board)\r\n      })\r\n      if (savedBoards.filter(board => board.boardId === id).length === 0) {\r\n        newBoards.push(result)\r\n      }\r\n    } else {\r\n      newBoards = this.state.boards.map((board) => board.boardId === id ? result : board)\r\n    }\r\n\r\n    this.setState({ boards: newBoards })\r\n    localStorage.setItem('boards', JSON.stringify(newBoards))\r\n  }\r\n\r\n  loadBoard = (id) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    this.setState({ currentBoard: result })\r\n  }\r\n\r\n  closeBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n    this.setState({ boards: this.state.boards.map((board) => board.boardId === id ? result : board) })\r\n    this.setState({ currentBoard: null })\r\n  }\r\n\r\n  deleteBoard = (id) => {\r\n    this.confirmBoardDeletePopup('none')\r\n    let boards = this.state.boards\r\n    const result = boards.filter(board => board.boardId !== id)\r\n    this.setState({ boards: result })\r\n    localStorage.setItem('boards', JSON.stringify(result))\r\n  }\r\n\r\n  switchBoardPopup = (display) => {\r\n    let boardPopup = document.getElementById('board-pop-up')\r\n    let boardNameInput = document.getElementById('board-name-input')\r\n    if (display === 'none') {\r\n      boardPopup.style = 'display: none;'\r\n      boardNameInput.value = ''\r\n    } else {\r\n      this.confirmBoardDeletePopup('none')\r\n      listenForEnterKey(\"#board-name-input\", this.createBoard);\r\n      boardPopup.style = 'display: block;'\r\n      setCaretPosition('board-name-input', 0)\r\n    }\r\n  }\r\n\r\n  confirmBoardDeletePopup = (display, id) => {\r\n    let confirmPopup = document.getElementById('confirm-board-delete-popup')\r\n    if (display === 'none') {\r\n      confirmPopup.style = 'display: none;'\r\n    } else {\r\n      this.switchBoardPopup('none')\r\n      confirmPopup.style = 'display: block;'\r\n      let boardId = document.getElementById('board-id')\r\n      boardId.textContent = id\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.currentBoard) {\r\n      let board = this.state.currentBoard\r\n      return (\r\n        <Board dragElement={dragElement} closeBoard={this.closeBoard} saveBoard={this.saveBoard} boardInfo={board} setCaretPosition={setCaretPosition} />\r\n      )\r\n    } else {\r\n      let boards = this.state.boards.map((board) => {\r\n        return (\r\n          <div className='board-names-wrap' key={board.boardId}>\r\n            <div className='board-names' onClick={() => this.loadBoard(`${board.boardId}`)}>\r\n              {board.boardName}\r\n            </div>\r\n            <i onClick={() => this.confirmBoardDeletePopup('block', board.boardId)} className=\"far fa-times-circle\"></i>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <div id='app'>\r\n          <h1>List-Maker</h1>\r\n          <div>\r\n            <h3>Boards</h3>\r\n            <div id='board-dropdown'>\r\n              {boards.length > 0 ? boards.map(board => board) : 'No boards'}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.switchBoardPopup(`block`)}>Create board</button>\r\n          </div>\r\n          <div id='board-pop-up' className='pop-ups'>\r\n            <i onClick={() => this.switchBoardPopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <input id='board-name-input' placeholder='Enter board name' />\r\n            <button onClick={() => this.createBoard(`${document.getElementById('board-name-input').value}`)}>Create board</button>\r\n          </div>\r\n          <div id='confirm-board-delete-popup' className='pop-ups'>\r\n            <i onClick={() => this.confirmBoardDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <div style={{ display: 'none' }} id='board-id'></div>\r\n            <p>Delete board?</p>\r\n            <button onClick={() => this.deleteBoard(`${document.getElementById('board-id').textContent}`)} id='yes-button'>Yes</button>\r\n            <button onClick={() => this.confirmBoardDeletePopup('none')}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}