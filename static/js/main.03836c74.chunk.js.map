{"version":3,"sources":["Components/Item.js","Components/InnerList.js","Components/Board.js","Components/App.js","serviceWorker.js","index.js"],"names":["Item","this","props","itemId","listId","selector","callback","document","querySelector","addEventListener","e","key","callbackValue","value","listenForEnterKey","concat","addToList","elemId","caretPos","elem","createTextRange","range","move","select","focus","undefined","selectionStart","setSelectionRange","setCaretPosition","_this","react_default","a","createElement","onBlur","deleteItem","id","className","autoComplete","placeholder","content","Component","InnerList","list","listName","onClick","confirmDeletePopup","react_beautiful_dnd_esm","isDropDisabled","droppableId","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","height","border","overflow","items","map","item","index","react","isDragDisabled","draggableId","Object","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","margin","display","Item_Item","startAdd","reorder","startIndex","endIndex","result","_result$splice","Array","from","splice","removed","slicedToArray","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","Board","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteList","state","lists","filter","setState","saveBoard","boardInfo","boardId","createNewList","droppableNumber","listArray","newList","push","getElementById","find","updatedList","itemIndex","getList","onDragEnd","type","destinationArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","destResults","err","return","sourceArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","srcResults","confirmPopup","textContent","dragElement","length","sortedlists","slice","sort","b","nameA","toUpperCase","nameB","lastListId","parseInt","listItems","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","lastItemId","_this2","InnerList_InnerList","popupSwitch","switchItemPopup","closeBoard","boardName","direction","flexWrap","alignSelf","droppableProps","elementId","pos1","pos2","pos3","pos4","closeDragElement","onmouseup","onmousemove","elementDrag","window","event","preventDefault","clientX","clientY","top","offsetTop","left","offsetLeft","dragMouseDown","onmousedown","App","createBoard","name","switchBoardPopup","boards","newBoard","boardNumber","currentBoard","board","newBoards","JSON","parse","localStorage","getItem","savedBoards","forEach","setItem","stringify","loadBoard","deleteBoard","confirmBoardDeletePopup","boardPopup","boardNameInput","lastBoardId","Board_Board","Boolean","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03836c74.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.querySelector(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback, listId) => {\r\n  document.querySelector(selector).addEventListener('keypress', function enterFunction(e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default class Item extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.itemId === 'addItem') {\r\n      let listId = this.props.listId\r\n      listenForEnterKey(`#${listId}-input`, this.props.addToList, listId)\r\n      setCaretPosition(`#${listId}-input`, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.itemId === 'addItem') {\r\n      let listId = this.props.listId\r\n      let itemId = this.props.itemId\r\n      return (\r\n        <input onBlur={() => this.props.deleteItem(listId, itemId)} id={`${listId}-input`} className='item-content-input' autoComplete=\"off\" placeholder='Enter item content' />\r\n      )\r\n    } else {\r\n      let itemId = this.props.itemId\r\n      return (\r\n        <div id={`${itemId}`}>\r\n          {this.props.content}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Item from './Item'\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '16px',\r\n  margin: `0 0 4px 0`,\r\n  border: '1px solid black',\r\n  width: '200px',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  padding: '8px',\r\n  width: '250px',\r\n  height: '60vh',\r\n  border: '1px solid black',\r\n  overflow: 'auto'\r\n});\r\n\r\nexport default class InnerList extends Component {\r\n\r\n  render() {\r\n    let list = this.props.list\r\n    let listId = list.id\r\n    let listName = list.listName\r\n\r\n    return (\r\n      <div key={listId}>\r\n        <i onClick={() => this.props.confirmDeletePopup('block', listId)} className=\"far fa-times-circle\"></i>\r\n        {listId === 'addList' ? <input autoComplete=\"off\" id='list-name-input' placeholder='Enter list name' /> : <h1 className='list-title-style'>{listName}</h1>}\r\n        <Droppable isDropDisabled={listId === 'addList' ? true : false} droppableId={listId}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='my-lists'\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}>\r\n              {list.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {item ?\r\n                    <Draggable\r\n                      isDragDisabled={item.id === \"addItem\" ? true : false}\r\n                      key={item.id === 'addItem' ? item.id + '-' + listId : item.id}\r\n                      draggableId={item.id === 'addItem' ? item.id + '-' + listId : item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className='item-style'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <i onClick={() => this.props.confirmDeletePopup('block', listId, item.id)} className=\"far fa-times-circle\"></i>\r\n                          <div style={{ display: 'none' }} id={`list-id-${listId}`}>{listId}</div>\r\n                          <Item deleteItem={this.props.deleteItem} addToList={this.props.addToList} listId={listId} itemId={item.id} content={item.content} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable> : <div className='no-items'></div>}\r\n                </Fragment>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <button onClick={() => this.props.startAdd(listId)}>Add item</button>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList'\r\n\r\nconst listenForEnterKey = (selector, callback, listId) => {\r\n  document.querySelector(selector).addEventListener('keypress', function enterFunction(e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  let result\r\n  if (list.items) {\r\n    result = Array.from(list.items)\r\n  } else {\r\n    result = Array.from(list);\r\n  }\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source.items);\r\n  const destClone = Array.from(destination.items);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '10px 10px 0 15px',\r\n  margin: `0 8px 0 0`,\r\n  height: '95%',\r\n  width: '280px',\r\n  border: '1px solid black',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  display: 'flex',\r\n  padding: '20px 8px 8px 8px',\r\n  flexWrap: 'no-wrap',\r\n  overflow: 'auto',\r\n  width: '98vw',\r\n  height: '90vh',\r\n  border: '1px solid black',\r\n  alignSelf: 'center'\r\n});\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemIndex = 0\r\n    this.droppableNumber = 0\r\n    this.state = {\r\n      lists: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dragElement('confirm-item-delete-popup')\r\n    this.props.dragElement('confirm-list-delete-popup')\r\n    if (this.props.boardInfo.lists && this.props.boardInfo.lists.length !== 0) {\r\n      let lists = this.props.boardInfo.lists\r\n      this.setState({ lists: lists })\r\n      if (lists.length > 1) {\r\n        let sortedlists = lists.slice().sort((a, b) => {\r\n          var nameA = a.id.toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b.id.toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n\r\n          // names must be equal\r\n          return 0;\r\n        });\r\n        let lastListId = sortedlists[sortedlists.length - 1].id.slice(9)\r\n        this.droppableNumber = parseInt(lastListId) + 1\r\n\r\n        let listItems = []\r\n        for (let list of lists) {\r\n          for (let item of list.items) {\r\n            listItems.push(item)\r\n          }\r\n        }\r\n        listItems.sort((a, b) => {\r\n          var nameA = a.id.toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b.id.toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n\r\n          // names must be equal\r\n          return 0;\r\n        });\r\n        if (listItems[listItems.length - 1] && listItems[listItems.length - 1].id !== 'addItem') {\r\n          let lastItemId = listItems[listItems.length - 1].id.slice(5)\r\n          this.itemIndex = parseInt(lastItemId) + 1\r\n        }\r\n      }\r\n    }\r\n    this.props.setCaretPosition('#list-name-input', 0)\r\n    listenForEnterKey(\"#list-name-input\", this.createNewList);\r\n  }\r\n\r\n  deleteList = (id) => {\r\n    this.confirmDeletePopup('none')\r\n    let lists = this.state.lists\r\n    const result = lists.filter(list => list.id !== id)\r\n    this.setState({ lists: result })\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, result)\r\n  }\r\n\r\n  createNewList = (listName) => {\r\n    let listId = 'droppable' + this.droppableNumber\r\n    let listArray = this.state.lists\r\n    let newList = { listName: listName, id: listId, items: [] }\r\n    listArray.push(newList)\r\n\r\n    this.setState({ lists: listArray })\r\n\r\n    document.getElementById('list-name-input').value = ''\r\n    this.droppableNumber++\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, listArray)\r\n  }\r\n\r\n  deleteItem = (listId, itemId) => {\r\n    this.confirmDeletePopup('none', 'list', 'item')\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId)\r\n    let updatedList = result.items.filter(item => item.id !== itemId)\r\n    result.items = updatedList\r\n    this.setState({ lists: lists.map(list => list.id === listId ? result : list) })\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists.map(list => list.id === listId ? result : list))\r\n  }\r\n\r\n  addToList = (listId, content) => {\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId);\r\n    let items = result.items\r\n    items = items.filter(item => item.id !== 'addItem')\r\n    items.push({ id: `item-${this.itemIndex}`, content: content })\r\n    items.push({ id: `addItem`, content: 'Add item' })\r\n\r\n    this.itemIndex++\r\n    this.setState({ lists: lists.map(list => list.id === listId ? list = { ...list, items: items } : list) })\r\n\r\n    this.props.setCaretPosition(`#${listId}-input`, 0)\r\n    this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists.map(list => list.id === listId ? list = { ...list, items: items } : list))\r\n  }\r\n\r\n  getList = (id) => {\r\n    let lists = this.state.lists\r\n    let result = lists.find(list => list.id === id);\r\n    return result\r\n  };\r\n\r\n  onDragEnd = (result) => {\r\n    if (result.type === 'COLUMN') {\r\n      // dropped outside the list\r\n      if (!result.destination) {\r\n        return;\r\n      }\r\n\r\n      const lists = reorder(\r\n        this.state.lists,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      this.setState({\r\n        lists: lists\r\n      });\r\n      this.props.saveBoard(`${this.props.boardInfo.boardId}`, lists)\r\n    } else {\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        const items = reorder(\r\n          this.getList(source.droppableId),\r\n          source.index,\r\n          destination.index\r\n        );\r\n\r\n        this.setState({ lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list) })\r\n        this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list))\r\n      } else {\r\n        const result = move(\r\n          this.getList(source.droppableId),\r\n          this.getList(destination.droppableId),\r\n          source,\r\n          destination\r\n        );\r\n\r\n        let destinationArray = []\r\n        for (let destResults of result[destination.droppableId]) {\r\n          destinationArray.push(destResults)\r\n        }\r\n\r\n        let sourceArray = []\r\n        for (let srcResults of result[source.droppableId]) {\r\n          sourceArray.push(srcResults)\r\n        }\r\n\r\n        this.setState({\r\n          lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n            list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list)\r\n        })\r\n        this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n          list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list))\r\n      }\r\n    }\r\n  }\r\n\r\n  confirmDeletePopup = (display, listId, itemId) => {\r\n    if (itemId) {\r\n      let confirmPopup = document.getElementById('confirm-item-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let item = document.getElementById('item-id')\r\n        item.textContent = itemId\r\n        let itemList = document.getElementById('item-list-id')\r\n        itemList.textContent = listId\r\n      }\r\n    } else {\r\n      let confirmPopup = document.getElementById('confirm-list-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let list = document.getElementById('list-id-' + listId)\r\n        list.textContent = listId\r\n      }\r\n    }\r\n  }\r\n\r\n  startAdd = (listId) => {\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId);\r\n    let newItem = { id: `addItem`, content: 'Add item' }\r\n    let items = result.items\r\n    items.push(newItem)\r\n    this.setState({ lists: lists.map(list => list.id === listId ? list = { ...list, items: items } : list) })\r\n  }\r\n\r\n  render() {\r\n\r\n    const lists = this.state.lists.map((list, index) => {\r\n      return (\r\n        <div className='list-wrap' key={list.id}>\r\n          <Draggable draggableId={list.id} index={index} isDragDisabled={list.id === \"addList\" ? true : false}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                className='list-style'\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                style={getItemStyle(\r\n                  snapshot.isDragging,\r\n                  provided.draggableProps.style\r\n                )}\r\n              >\r\n                <InnerList deleteItem={this.deleteItem} startAdd={this.startAdd} addToList={this.addToList} confirmDeletePopup={this.confirmDeletePopup} popupSwitch={this.switchItemPopup} list={list} />\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div id='board-wrap'>\r\n        <button onClick={() => this.props.closeBoard(`${this.props.boardInfo.boardId}`, this.state.lists)}>Home</button>\r\n        <div id='board-title'>{this.props.boardInfo.boardName}</div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"horizontal\" type='COLUMN'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                id='board'\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                {lists}\r\n                <div>\r\n                  <input autoComplete=\"off\" id='list-name-input' placeholder='Enter list name' />\r\n                </div>\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div id='confirm-item-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none', 'list', 'item')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <div style={{ display: 'none' }} id='item-id'></div>\r\n          <div style={{ display: 'none' }} id='item-list-id'></div>\r\n          <p>Delete item?</p>\r\n          <button onClick={() => this.deleteItem(`${document.getElementById('item-list-id').textContent}`, `${document.getElementById('item-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none', 'list', 'item')}>No</button>\r\n        </div>\r\n        <div id='confirm-list-delete-popup' className='pop-ups'>\r\n          <i onClick={() => this.confirmDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n          <br />\r\n          <p>Delete list?</p>\r\n          <button onClick={() => this.deleteList(`${document.getElementById('list-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none')}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Board from './Board'\r\n\r\nconst dragElement = (elementId) => {\r\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n\r\n  const closeDragElement = () => {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n\r\n  const elementDrag = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    document.getElementById(elementId).style.top = (document.getElementById(elementId).offsetTop - pos2) + \"px\";\r\n    document.getElementById(elementId).style.left = (document.getElementById(elementId).offsetLeft - pos1) + \"px\";\r\n  }\r\n\r\n  const dragMouseDown = (e) => {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a const whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  if (document.getElementById(elementId)) {\r\n    // if present, the header is where you move the DIV from:\r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV: \r\n    document.getElementById(elementId).onmousedown = dragMouseDown;\r\n  }\r\n}\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.querySelector(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      callback(callbackValue);\r\n    }\r\n  });\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boardNumber = 0\r\n    this.state = {\r\n      boards: [],\r\n      currentBoard: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    dragElement('board-pop-up')\r\n    dragElement('confirm-board-delete-popup')\r\n    if (this.state.boards.length === 0 && JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let boards = JSON.parse(localStorage.getItem('boards'))\r\n      let lastBoardId = boards[boards.length - 1].boardId.slice(6)\r\n      this.boardNumber = parseInt(lastBoardId) + 1\r\n      this.setState({ boards: boards })\r\n    }\r\n  }\r\n\r\n  createBoard = (name) => {\r\n    this.switchBoardPopup('none')\r\n    let boards = this.state.boards\r\n    let newBoard = { boardId: `board-${this.boardNumber}`, boardName: name, lists: null }\r\n    boards.push(newBoard)\r\n    this.setState({ boards: boards, currentBoard: newBoard })\r\n    this.boardNumber++\r\n    this.saveBoard(newBoard.boardId, newBoard.lists)\r\n  }\r\n\r\n  saveBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n\r\n    let newBoards = []\r\n    if (JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let savedBoards = JSON.parse(localStorage.getItem('boards'))\r\n      savedBoards.forEach(board => {\r\n        if (board.boardId === id) {\r\n          board = result\r\n        }\r\n        newBoards.push(board)\r\n      })\r\n      if (savedBoards.filter(board => board.boardId === id).length === 0) {\r\n        newBoards.push(result)\r\n      }\r\n    } else {\r\n      newBoards = this.state.boards.map((board) => board.boardId === id ? result : board)\r\n    }\r\n\r\n    this.setState({ boards: newBoards })\r\n    localStorage.setItem('boards', JSON.stringify(newBoards))\r\n  }\r\n\r\n  loadBoard = (id) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    this.setState({ currentBoard: result })\r\n  }\r\n\r\n  closeBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n    this.setState({ boards: this.state.boards.map((board) => board.boardId === id ? result : board) })\r\n    this.saveBoard(id, lists)\r\n    this.setState({ currentBoard: null })\r\n  }\r\n\r\n  deleteBoard = (id) => {\r\n    this.confirmBoardDeletePopup('none')\r\n    let boards = this.state.boards\r\n    const result = boards.filter(board => board.boardId !== id)\r\n    this.setState({ boards: result })\r\n    localStorage.setItem('boards', JSON.stringify(result))\r\n  }\r\n\r\n  switchBoardPopup = (display) => {\r\n    let boardPopup = document.getElementById('board-pop-up')\r\n    let boardNameInput = document.getElementById('board-name-input')\r\n    if (display === 'none') {\r\n      boardPopup.style = 'display: none;'\r\n      boardNameInput.value = ''\r\n    } else {\r\n      this.confirmBoardDeletePopup('none')\r\n      listenForEnterKey(\"#board-name-input\", this.createBoard);\r\n      boardPopup.style = 'display: block;'\r\n      setCaretPosition('#board-name-input', 0)\r\n    }\r\n  }\r\n\r\n  confirmBoardDeletePopup = (display, id) => {\r\n    let confirmPopup = document.getElementById('confirm-board-delete-popup')\r\n    if (display === 'none') {\r\n      confirmPopup.style = 'display: none;'\r\n    } else {\r\n      this.switchBoardPopup('none')\r\n      confirmPopup.style = 'display: block;'\r\n      let boardId = document.getElementById('board-id')\r\n      boardId.textContent = id\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.currentBoard) {\r\n      let board = this.state.currentBoard\r\n      return (\r\n        <Board dragElement={dragElement} closeBoard={this.closeBoard} saveBoard={this.saveBoard} boardInfo={board} setCaretPosition={setCaretPosition} />\r\n      )\r\n    } else {\r\n      let boards = this.state.boards.map((board) => {\r\n        return (\r\n          <div className='board-names-wrap' key={board.boardId}>\r\n            <div className='board-names' onClick={() => this.loadBoard(`${board.boardId}`)}>\r\n              {board.boardName}\r\n            </div>\r\n            <i onClick={() => this.confirmBoardDeletePopup('block', board.boardId)} className=\"far fa-times-circle\"></i>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <div id='app'>\r\n          <h1>List-Maker</h1>\r\n          <div>\r\n            <h3>Boards</h3>\r\n            <div id='board-dropdown'>\r\n              {boards.length > 0 ? boards.map(board => board) : 'No boards'}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.switchBoardPopup(`block`)}>Create board</button>\r\n          </div>\r\n          <div id='board-pop-up' className='pop-ups'>\r\n            <i onClick={() => this.switchBoardPopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <input id='board-name-input' placeholder='Enter board name' />\r\n            <button onClick={() => this.createBoard(`${document.getElementById('board-name-input').value}`)}>Create board</button>\r\n          </div>\r\n          <div id='confirm-board-delete-popup' className='pop-ups'>\r\n            <i onClick={() => this.confirmBoardDeletePopup('none')} className=\"far fa-times-circle\"></i>\r\n            <br />\r\n            <div style={{ display: 'none' }} id='board-id'></div>\r\n            <p>Delete board?</p>\r\n            <button onClick={() => this.deleteBoard(`${document.getElementById('board-id').textContent}`)} id='yes-button'>Yes</button>\r\n            <button onClick={() => this.confirmBoardDeletePopup('none')}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}