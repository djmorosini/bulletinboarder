{"version":3,"sources":["Components/InnerList.js","Components/Board.js","Components/App.js","serviceWorker.js","index.js"],"names":["InnerList","_this","this","list","props","listId","id","listName","react_default","a","createElement","key","onClick","popupSwitch","className","confirmDeletePopup","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","height","border","overflow","items","map","item","index","react","draggableId","Object","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","margin","content","placeholder","Component","listenForEnterKey","selector","callback","document","querySelector","addEventListener","e","callbackValue","value","textContent","reorder","startIndex","endIndex","result","_result$splice","Array","from","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","Board","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteList","state","lists","filter","setState","createNewList","droppableNumber","listArray","newList","push","switchListPopup","deleteItem","itemId","find","updatedList","addToList","concat","itemIndex","getElementById","getList","onDragEnd","type","destinationArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","destResults","err","return","sourceArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","srcResults","display","listPopup","listNameInput","switchItemPopup","setCaretPosition","itemPopup","itemPopupInput","confirmPopup","length","boardInfo","_this2","closeBoard","boardId","saveBoard","boardName","direction","flexWrap","alignSelf","droppableProps","InnerList_InnerList","elemId","caretPos","elem","createTextRange","range","select","focus","selectionStart","setSelectionRange","App","createBoard","name","switchBoardPopup","boards","newBoard","boardNumber","currentBoard","board","newBoards","JSON","parse","localStorage","getItem","forEach","setItem","stringify","loadBoard","deleteBoard","confirmBoardDeletePopup","boardPopup","boardNameInput","lastBoardId","slice","parseInt","Board_Board","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60af04ba.chunk.js","sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '16px',\r\n  margin: `0 0 4px 0`,\r\n  border: '1px solid black',\r\n  width: '200px',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  padding: '8px',\r\n  width: '250px',\r\n  height: '370px',\r\n  border: '1px solid black',\r\n  overflow: 'auto'\r\n});\r\n\r\nexport default class InnerList extends Component {\r\n\r\n  render() {\r\n    let list = this.props.list\r\n    let listId = list.id\r\n    let listName = list.listName\r\n\r\n    return (\r\n      <div key={listId}>\r\n        <button onClick={() => { this.props.popupSwitch('block', listName, listId) }}>Add to {listName}</button>\r\n        <button className='close-buttons' onClick={() => { this.props.confirmDeletePopup('block', listId) }}>X</button>\r\n        <h1>{listName}</h1>\r\n        <Droppable droppableId={listId}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='my-lists'\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}>\r\n              {list.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {item ?\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className='item-style'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}>\r\n                          <button className='close-buttons' onClick={() => { this.props.confirmDeletePopup('block', listId, item.id) }}>X</button>\r\n                          {item.content}\r\n                        </div>\r\n                      )}\r\n                    </Draggable> : <div className='no-items'></div>}\r\n                </Fragment>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList'\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      if (selector === '#list-name-input') {\r\n        callback(callbackValue);\r\n      } else {\r\n        let listId = document.querySelector('#list-id').textContent\r\n        callback(listId, callbackValue);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  let result\r\n  if (list.items) {\r\n    result = Array.from(list.items)\r\n  } else {\r\n    result = Array.from(list);\r\n  }\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source.items);\r\n  const destClone = Array.from(destination.items);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: 'none',\r\n  padding: '10px 10px 0 15px',\r\n  margin: `0 8px 0 0`,\r\n  height: '95%',\r\n  width: '280px',\r\n  border: '1px solid black',\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n  display: 'flex',\r\n  padding: '20px 8px 8px 8px',\r\n  flexWrap: 'no-wrap',\r\n  overflow: 'auto',\r\n  width: '98vw',\r\n  height: '90vh',\r\n  border: '1px solid black',\r\n  alignSelf: 'center'\r\n});\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemIndex = 0\r\n    this.droppableNumber = 0\r\n    this.state = {\r\n      lists: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.lists.length === 0 && this.props.boardInfo.lists && this.props.boardInfo.lists.length !== 0) {\r\n      let lists = this.props.boardInfo.lists\r\n      this.setState({ lists: lists })\r\n    }\r\n    listenForEnterKey(\"#list-name-input\", this.createNewList);\r\n    listenForEnterKey(\"#item-content-input\", this.addToList);\r\n  }\r\n\r\n  deleteList = (id) => {\r\n    this.confirmDeletePopup('none')\r\n    let lists = this.state.lists\r\n    const result = lists.filter(list => list.id !== id)\r\n    this.setState({ lists: result })\r\n  }\r\n\r\n  createNewList = (listName) => {\r\n    let listId = 'droppable' + this.droppableNumber\r\n    let items = []\r\n    let listArray = this.state.lists\r\n    let newList = { listName: listName, id: listId, items: items }\r\n    listArray.push(newList)\r\n\r\n    this.setState({ lists: listArray })\r\n\r\n    this.switchListPopup('none')\r\n    this.droppableNumber++\r\n  }\r\n\r\n  deleteItem = (listId, itemId) => {\r\n    this.confirmDeletePopup('none', 'list', 'item')\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId)\r\n    let updatedList = result.items.filter(item => item.id !== itemId)\r\n    result.items = updatedList\r\n    this.setState({ lists: lists.map(list => list.id === listId ? result : list) })\r\n  }\r\n\r\n  addToList = (listId, content) => {\r\n    let lists = this.state.lists\r\n    const result = lists.find(list => list.id === listId);\r\n    let items = result.items\r\n    items.push({ id: `item-${this.itemIndex}`, content: content })\r\n    this.itemIndex++\r\n    this.setState({ lists: lists.map(list => list.id === listId ? list = { ...list, items: items } : list) })\r\n\r\n    let itemPopupInput = document.getElementById('item-content-input')\r\n    itemPopupInput.value = ''\r\n  }\r\n\r\n  getList = (id) => {\r\n    let lists = this.state.lists\r\n    let result = lists.find(list => list.id === id);\r\n    return result\r\n  };\r\n\r\n  onDragEnd = (result) => {\r\n    if (result.type === 'COLUMN') {\r\n      // dropped outside the list\r\n      if (!result.destination) {\r\n        return;\r\n      }\r\n\r\n      const lists = reorder(\r\n        this.state.lists,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      this.setState({\r\n        lists: lists\r\n      });\r\n    } else {\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n\r\n      if (source.droppableId === destination.droppableId) {\r\n        const items = reorder(\r\n          this.getList(source.droppableId),\r\n          source.index,\r\n          destination.index\r\n        );\r\n\r\n        this.setState({ lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: items } : list) })\r\n\r\n      } else {\r\n        const result = move(\r\n          this.getList(source.droppableId),\r\n          this.getList(destination.droppableId),\r\n          source,\r\n          destination\r\n        );\r\n\r\n        let destinationArray = []\r\n        for (let destResults of result[destination.droppableId]) {\r\n          destinationArray.push(destResults)\r\n        }\r\n\r\n        let sourceArray = []\r\n        for (let srcResults of result[source.droppableId]) {\r\n          sourceArray.push(srcResults)\r\n        }\r\n\r\n        this.setState({\r\n          lists: this.state.lists.map(list => list.id === source.droppableId ? list = { ...list, items: sourceArray } :\r\n            list.id === destination.droppableId ? list = { ...list, items: destinationArray } : list)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  switchListPopup = (display) => {\r\n    let listPopup = document.getElementById('list-pop-up')\r\n    let listNameInput = document.getElementById('list-name-input')\r\n    if (display === 'none') {\r\n      listPopup.style = 'display: none;'\r\n      listNameInput.value = ''\r\n    } else {\r\n      this.switchItemPopup('none')\r\n      listPopup.style = 'display: block;'\r\n      this.props.setCaretPosition('list-name-input', 0)\r\n    }\r\n  }\r\n\r\n  switchItemPopup = (display, listName, listId) => {\r\n    let itemPopup = document.getElementById('item-pop-up')\r\n    let itemPopupInput = document.getElementById('item-content-input')\r\n    if (display === 'none') {\r\n      itemPopup.style = 'display: none;'\r\n      itemPopupInput.value = ''\r\n    } else {\r\n      this.switchListPopup('none')\r\n      let popupTitle = document.getElementById('item-popup-title')\r\n      popupTitle.textContent = listName\r\n      let idDiv = document.getElementById('list-id')\r\n      idDiv.textContent = listId\r\n      itemPopup.style = 'display: block;'\r\n      this.props.setCaretPosition('item-content-input', 0)\r\n    }\r\n  }\r\n\r\n  confirmDeletePopup = (display, listId, itemId) => {\r\n    this.switchItemPopup('none')\r\n    this.switchListPopup('none')\r\n    if (itemId) {\r\n      let confirmPopup = document.getElementById('confirm-item-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let item = document.getElementById('item-id')\r\n        item.textContent = itemId\r\n        let itemList = document.getElementById('item-list-id')\r\n        itemList.textContent = listId\r\n      }\r\n    } else {\r\n      let confirmPopup = document.getElementById('confirm-list-delete-popup')\r\n      if (display === 'none') {\r\n        confirmPopup.style = 'display: none;'\r\n      } else {\r\n        confirmPopup.style = 'display: block;'\r\n        let list = document.getElementById('list-id')\r\n        list.textContent = listId\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='board-wrap'>\r\n        <button onClick={() => { this.switchListPopup('block') }}>Add list</button>\r\n        <button onClick={() => this.props.closeBoard(`${this.props.boardInfo.boardId}`, this.state.lists)} >Close board</button>\r\n        <button onClick={() => this.props.saveBoard(`${this.props.boardInfo.boardId}`, this.state.lists)} >Save board</button>\r\n        <span>{this.props.boardInfo.boardName}</span>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\" direction=\"horizontal\" type='COLUMN'>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                id='board'\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                {this.state.lists.map((list, index) => (\r\n                  <div className='list-wrap' key={list.id}>\r\n                    <Draggable draggableId={list.id} index={index}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          className='list-style'\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <InnerList confirmDeletePopup={this.confirmDeletePopup} popupSwitch={this.switchItemPopup} list={list} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  </div>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div id='list-pop-up' className='pop-ups'>\r\n          <button className='close-buttons' onClick={() => this.switchListPopup('none')}>X</button>\r\n          <br />\r\n          <input id='list-name-input' placeholder='Enter list name' />\r\n          <button onClick={() => this.createNewList(`${document.getElementById('list-name-input').value}`)}>Create List</button>\r\n        </div>\r\n        <div id='item-pop-up' className='pop-ups'>\r\n          <button className='close-buttons' onClick={() => this.switchItemPopup('none')}>X</button>\r\n          <br />\r\n          <div>Add item to <span id='item-popup-title'></span></div>\r\n          <div style={{ display: 'none' }} id='list-id'></div>\r\n          <input id='item-content-input' placeholder='Enter item content' />\r\n          <button onClick={() => this.addToList(document.getElementById('list-id').textContent, `${document.getElementById('item-content-input').value}`)}>Create Item</button>\r\n        </div>\r\n        <div id='confirm-item-delete-popup' className='pop-ups'>\r\n          <button className='close-buttons' onClick={() => this.confirmDeletePopup('none', 'list', 'item')}>X</button>\r\n          <br />\r\n          <div style={{ display: 'none' }} id='item-id'></div>\r\n          <div style={{ display: 'none' }} id='item-list-id'></div>\r\n          <p>Delete item?</p>\r\n          <button onClick={() => this.deleteItem(`${document.getElementById('item-list-id').textContent}`, `${document.getElementById('item-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none', 'list', 'item')}>No</button>\r\n        </div>\r\n        <div id='confirm-list-delete-popup' className='pop-ups'>\r\n          <button className='close-buttons' onClick={() => this.confirmDeletePopup('none')}>X</button>\r\n          <br />\r\n          <div style={{ display: 'none' }} id='list-id'></div>\r\n          <p>Delete list?</p>\r\n          <button onClick={() => this.deleteList(`${document.getElementById('list-id').textContent}`)} id='yes-button'>Yes</button>\r\n          <button onClick={() => this.confirmDeletePopup('none')}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Board from './Board'\r\n\r\nconst setCaretPosition = (elemId, caretPos) => {\r\n  let elem = document.getElementById(elemId);\r\n  if (elem.createTextRange) {\r\n    let range = elem.createTextRange();\r\n    range.move('character', caretPos);\r\n    range.select();\r\n  } else {\r\n    elem.focus();\r\n    if (elem.selectionStart !== undefined) {\r\n      elem.setSelectionRange(caretPos, caretPos);\r\n    }\r\n  }\r\n}\r\n\r\nconst listenForEnterKey = (selector, callback) => {\r\n  document.querySelector(selector).addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter') {\r\n      let callbackValue = document.querySelector(selector).value\r\n      callback(callbackValue);\r\n    }\r\n  });\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.boardNumber = 0\r\n    this.state = {\r\n      boards: [],\r\n      currentBoard: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.boards.length === 0 && JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let boards = JSON.parse(localStorage.getItem('boards'))\r\n      let lastBoardId = boards[boards.length - 1].boardId.slice(6)\r\n      this.boardNumber = parseInt(lastBoardId) + 1\r\n      this.setState({ boards: boards })\r\n    }\r\n  }\r\n\r\n  createBoard = (name) => {\r\n    this.switchBoardPopup('none')\r\n    let boards = this.state.boards\r\n    let newBoard = { boardId: `board-${this.boardNumber}`, boardName: name, lists: null }\r\n    boards.push(newBoard)\r\n    this.setState({ boards: boards, currentBoard: newBoard })\r\n    this.boardNumber++\r\n  }\r\n\r\n  saveBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n\r\n    let newBoards = []\r\n    if (JSON.parse(localStorage.getItem('boards')) && JSON.parse(localStorage.getItem('boards')).length > 0) {\r\n      let savedBoards = JSON.parse(localStorage.getItem('boards'))\r\n      savedBoards.forEach(board => {\r\n        if (board.boardId === id) {\r\n          board = result\r\n        }\r\n        newBoards.push(board)\r\n      })\r\n    } else {\r\n      newBoards = this.state.boards.map((board) => board.boardId === id ? result : board)\r\n    }\r\n    this.setState({ boards: newBoards })\r\n    localStorage.setItem('boards', JSON.stringify(newBoards))\r\n  }\r\n\r\n  loadBoard = (id) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    this.setState({ currentBoard: result })\r\n  }\r\n\r\n  closeBoard = (id, lists) => {\r\n    let boards = this.state.boards\r\n    const result = boards.find(board => board.boardId === id);\r\n    result.lists = lists\r\n    this.setState({ boards: this.state.boards.map((board) => board.boardId === id ? result : board) })\r\n    this.setState({ currentBoard: null })\r\n  }\r\n\r\n  deleteBoard = (id) => {\r\n    this.confirmBoardDeletePopup('none')\r\n    let boards = this.state.boards\r\n    const result = boards.filter(board => board.boardId !== id)\r\n    this.setState({ boards: result })\r\n    localStorage.setItem('boards', JSON.stringify(result))\r\n  }\r\n\r\n  switchBoardPopup = (display) => {\r\n    let boardPopup = document.getElementById('board-pop-up')\r\n    let boardNameInput = document.getElementById('board-name-input')\r\n    if (display === 'none') {\r\n      boardPopup.style = 'display: none;'\r\n      boardNameInput.value = ''\r\n    } else {\r\n      listenForEnterKey(\"#board-name-input\", this.createBoard);\r\n      boardPopup.style = 'display: block;'\r\n      setCaretPosition('board-name-input', 0)\r\n    }\r\n  }\r\n\r\n  confirmBoardDeletePopup = (display, id) => {\r\n    this.switchBoardPopup('none')\r\n    let confirmPopup = document.getElementById('confirm-board-delete-popup')\r\n    if (display === 'none') {\r\n      confirmPopup.style = 'display: none;'\r\n    } else {\r\n      confirmPopup.style = 'display: block;'\r\n      let boardId = document.getElementById('board-id')\r\n      boardId.textContent = id\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.currentBoard) {\r\n      let board = this.state.currentBoard\r\n      return (\r\n        <Board closeBoard={this.closeBoard} saveBoard={this.saveBoard} boardInfo={board} setCaretPosition={setCaretPosition} />\r\n      )\r\n    } else {\r\n      let boards = this.state.boards.map((board) => {\r\n        return (\r\n          <div className='board-names-wrap' key={board.boardId}>\r\n            <div className='board-names' onClick={() => this.loadBoard(`${board.boardId}`)}>\r\n              {board.boardName}\r\n            </div>\r\n            <button className='close-buttons' onClick={() => { this.confirmBoardDeletePopup('block', board.boardId) }}>X</button>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <div id='app'>\r\n          <h1>List-Maker</h1>\r\n          <div>\r\n            <h3>Boards</h3>\r\n            <div id='board-dropdown'>\r\n              {boards.length > 0 ? boards.map(board => board) : 'No boards'}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button onClick={() => this.switchBoardPopup(`block`)}>Create board</button>\r\n          </div>\r\n          <div id='board-pop-up' className='pop-ups'>\r\n            <button className='close-buttons' onClick={() => this.switchBoardPopup('none')}>X</button>\r\n            <br />\r\n            <input id='board-name-input' placeholder='Enter board name' />\r\n            <button onClick={() => this.createBoard(`${document.getElementById('board-name-input').value}`)}>Create board</button>\r\n          </div>\r\n          <div id='confirm-board-delete-popup' className='pop-ups'>\r\n            <button className='close-buttons' onClick={() => this.confirmBoardDeletePopup('none')}>X</button>\r\n            <br />\r\n            <div style={{ display: 'none' }} id='board-id'></div>\r\n            <p>Delete board?</p>\r\n            <button onClick={() => this.deleteBoard(`${document.getElementById('board-id').textContent}`)} id='yes-button'>Yes</button>\r\n            <button onClick={() => this.confirmBoardDeletePopup('none')}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}